/* gc8034_lib.h
 *
 *Copyright (c) 2017 Qualcomm Technologies, Inc.
 *All Rights Reserved.
 *Confidential and Proprietary - Qualcomm Technologies, Inc.
 */

#ifndef __GC8034_LIB_H__
#define __GC8034_LIB_H__

#include "sensor_lib.h"
//#define FULLSIZE_PREVIEW
#define   GC8034MinRegisterGain        64      ///< Minimum sensor register gain
#define   GC8034MaxRegisterGain        64*16    ///< Maximum sensor register gain
#define   GC8034MinRealGain            1.0     ///< Minimum sensor real gain (1X)
#define   GC8034MaxRealGain            16.0     ///< Maximum sensor real gain (16X)

#define SENSOR_MODEL "gc8034"
#ifndef FULLSIZE_PREVIEW
static uint16_t Basic_Line[4]={2484,2484,1116,756};
static int16_t Min_FL[4]={2516,2516,1148,788};
#else
static uint16_t Basic_Line[3]={2484,1116,756};
static int16_t Min_FL[3]={2516,1148,788};
#endif

#define GC8034_MIRROR_NORMAL 
//#define GC8034_MIRROR_H 
//#define GC8034_MIRROR_V 
//#define GC8034_MIRROR_HV

#if defined(GC8034_MIRROR_NORMAL)
#define MIRROR           0xc0
#define BINSTARTY        0x04
#define BINSTARTX        0x05
#define FULLSTARTY       0x08
#define FULLSTARTX       0x09
#elif defined(GC8034_MIRROR_H)
#define MIRROR           0xc1
#define BINSTARTY        0x04
#define BINSTARTX        0x05
#define FULLSTARTY       0x08
#define FULLSTARTX       0x0b
#elif defined(GC8034_MIRROR_V)
#define MIRROR           0xc2
#define BINSTARTY        0x04
#define BINSTARTX        0x05
#define FULLSTARTY       0x08
#define FULLSTARTX       0x09
#elif defined(GC8034_MIRROR_HV)
#define MIRROR           0xc3
#define BINSTARTY        0x04
#define BINSTARTX        0x05
#define FULLSTARTY       0x08
#define FULLSTARTX       0x0b
#else
#define MIRROR           0xc0
#define BINSTARTY        0x04
#define BINSTARTX        0x05
#define FULLSTARTY       0x08
#define FULLSTARTX       0x09
#endif

#define MAX_AG_INDEX     9
#define MEAG_INDEX       7
#define AGC_REG_NUM      14

uint16_t gain_level[MAX_AG_INDEX] = {
  0x0040, /* 1.000*/
  0x0058, /* 1.375*/
  0x007d, /* 1.950*/
  0x00ad, /* 2.700*/
  0x00f3, /* 3.800*/
  0x0159, /* 5.400*/
  0x01ea, /* 7.660*/
  0x02ac, /*10.688*/
  0x03c2, /*15.030*/
};

uint8_t agc_register[2 * MAX_AG_INDEX][AGC_REG_NUM] = {
  /*{ 0xfe, 0x20, 0x33, 0xfe, 0xdf, 0xe7, 0xe8, 0xe9, 0xea, 0xeb, 0xec, 0xed, 0xee, 0xfe },*/
  /* binning */
  { 0x00, 0x55, 0x83, 0x01, 0x06, 0x18, 0x20, 0x16, 0x17, 0x50, 0x6c, 0x9b, 0xd8, 0x00 },
  { 0x00, 0x55, 0x83, 0x01, 0x06, 0x18, 0x20, 0x16, 0x17, 0x50, 0x6c, 0x9b, 0xd8, 0x00 },
  { 0x00, 0x4e, 0x84, 0x01, 0x0c, 0x2e, 0x2d, 0x15, 0x19, 0x47, 0x70, 0x9f, 0xd8, 0x00 },
  { 0x00, 0x51, 0x80, 0x01, 0x07, 0x28, 0x32, 0x22, 0x20, 0x49, 0x70, 0x91, 0xd9, 0x00 },
  { 0x00, 0x4d, 0x83, 0x01, 0x0f, 0x3b, 0x3b, 0x1c, 0x1f, 0x47, 0x6f, 0x9b, 0xd3, 0x00 },
  { 0x00, 0x50, 0x83, 0x01, 0x08, 0x35, 0x46, 0x1e, 0x22, 0x4c, 0x70, 0x9a, 0xd2, 0x00 },
  { 0x00, 0x52, 0x80, 0x01, 0x0c, 0x35, 0x3a, 0x2b, 0x2d, 0x4c, 0x67, 0x8d, 0xc0, 0x00 },
  { 0x00, 0x52, 0x80, 0x01, 0x0c, 0x35, 0x3a, 0x2b, 0x2d, 0x4c, 0x67, 0x8d, 0xc0, 0x00 },
  { 0x00, 0x52, 0x80, 0x01, 0x0c, 0x35, 0x3a, 0x2b, 0x2d, 0x4c, 0x67, 0x8d, 0xc0, 0x00 },
  /* fullsize */
  { 0x00, 0x55, 0x83, 0x01, 0x06, 0x18, 0x20, 0x16, 0x17, 0x50, 0x6c, 0x9b, 0xd8, 0x00 },
  { 0x00, 0x55, 0x83, 0x01, 0x06, 0x18, 0x20, 0x16, 0x17, 0x50, 0x6c, 0x9b, 0xd8, 0x00 },
  { 0x00, 0x4e, 0x84, 0x01, 0x0c, 0x2e, 0x2d, 0x15, 0x19, 0x47, 0x70, 0x9f, 0xd8, 0x00 },
  { 0x00, 0x51, 0x80, 0x01, 0x07, 0x28, 0x32, 0x22, 0x20, 0x49, 0x70, 0x91, 0xd9, 0x00 },
  { 0x00, 0x4d, 0x83, 0x01, 0x0f, 0x3b, 0x3b, 0x1c, 0x1f, 0x47, 0x6f, 0x9b, 0xd3, 0x00 },
  { 0x00, 0x50, 0x83, 0x01, 0x08, 0x35, 0x46, 0x1e, 0x22, 0x4c, 0x70, 0x9a, 0xd2, 0x00 },
  { 0x00, 0x52, 0x80, 0x01, 0x0c, 0x35, 0x3a, 0x2b, 0x2d, 0x4c, 0x67, 0x8d, 0xc0, 0x00 },
  { 0x00, 0x52, 0x80, 0x01, 0x0c, 0x35, 0x3a, 0x2b, 0x2d, 0x4c, 0x67, 0x8d, 0xc0, 0x00 },
  { 0x00, 0x52, 0x80, 0x01, 0x0c, 0x35, 0x3a, 0x2b, 0x2d, 0x4c, 0x67, 0x8d, 0xc0, 0x00 }
};

#define START_REG_ARRAY \
{ \
  {0xfe, 0x00, 0x00}, \
  {0x3f, 0xd0, 0x00}, \
  {0xfe, 0x00, 0x00}, \
}

#define STOP_REG_ARRAY \
{ \
  {0xfe, 0x00, 0x00}, \
  {0x3f, 0x00, 0x00}, \
  {0xfe, 0x00, 0x00}, \
}

#define GROUPON_REG_ARRAY \
{ \
  {0xfe, 0x00, 0x00}, \
}

#define GROUPOFF_REG_ARRAY \
{ \
  {0xfe, 0x00, 0x00}, \
}

#define INIT0_REG_ARRAY \
{ \
  {0xf2, 0x00, 0x00}, \
  {0xf4, 0x80, 0x00}, \
  { 0x19, 0x00}, \
  {0xf6, 0x44, 0x00}, \
  {0xf8, 0x63, 0x00}, \
  {0xfa, 0x45, 0x00}, \
  {0xf9, 0x00, 0x00}, \
  {0xf7, 0x95, 0x00}, \
  {0xfc, 0x00, 0x00}, \
  {0xfc, 0x00, 0x00}, \
  {0xfc, 0xea, 0x00}, \
  {0xfe, 0x03, 0x00}, \
  {0x03, 0x9a, 0x00}, \
  {0x18, 0x07, 0x00}, \
  {0x01, 0x07, 0x00}, \
  {0xfc, 0xee, 0x00}, \
  {0xfe, 0x00, 0x00}, \
  {0x88, 0x03, 0x00}, \
  {0xfe, 0x00, 0x00}, \
 
  {0x07, 0x00, 0x00}, \
  {0x08, 0x20, 0x00}, \
  {0x09, 0x00, 0x00}, \
  {0x0a, 0x3a, 0x00}, \
  {0x0b, 0x00, 0x00}, \
  {0x0c, 0x04, 0x00}, \
  {0x0d, 0x09, 0x00}, \
  {0x0e, 0xa0, 0x00}, \
  {0x0f, 0x0c, 0x00}, \
  {0x10, 0xd4, 0x00}, \
  {0x17, MIRROR, 0x00}, \
  {0x18, 0x02, 0x00}, \
  {0x19, 0x17, 0x00}, \
  {0x1e, 0x50, 0x00}, \
  {0x1f, 0x80, 0x00}, \
  {0x21, 0x4c, 0x00}, \
  {0x25, 0x00, 0x00}, \
  {0x28, 0x4a, 0x00}, \
  {0x2d, 0x89, 0x00}, \
  {0xca, 0x02, 0x00}, \
  {0xcb, 0x00, 0x00}, \
  {0xcc, 0x39, 0x00}, \
  {0xce, 0xd0, 0x00}, \
  {0xcf, 0x93, 0x00}, \
  {0xd0, 0x1b, 0x00}, \
  {0xd1, 0xaa, 0x00}, \
  {0xd2, 0xc3, 0x00}, \
  {0xd8, 0x40, 0x00}, \
  {0xd9, 0xff, 0x00}, \
  {0xda, 0x0e, 0x00}, \
  {0xdb, 0xb0, 0x00}, \
  {0xdc, 0x0e, 0x00}, \
  {0xde, 0x08, 0x00}, \
  {0xe4, 0xc6, 0x00}, \
  {0xe5, 0x08, 0x00}, \
  {0xe6, 0x10, 0x00}, \
  {0xed, 0x2a, 0x00}, \
  {0xfe, 0x02, 0x00}, \
  {0x59, 0x02, 0x00}, \
  {0x5a, 0x04, 0x00}, \
  {0x5b, 0x08, 0x00}, \
  {0x5c, 0x20, 0x00}, \
  {0xfe, 0x00, 0x00}, \
  {0x1a, 0x09, 0x00}, \
  {0x1d, 0x13, 0x00}, \
  {0xfe, 0x10, 0x00}, \
  {0xfe, 0x00, 0x00}, \
  {0xfe, 0x10, 0x00}, \
  {0xfe, 0x00, 0x00}, \
  {0xfe, 0x00, 0x00}, \
  {0x20, 0x55, 0x00}, \
  {0x33, 0x83, 0x00}, \
  {0xfe, 0x01, 0x00}, \
  {0xdf, 0x06, 0x00}, \
  {0xe7, 0x18, 0x00}, \
  {0xe8, 0x20, 0x00}, \
  {0xe9, 0x16, 0x00}, \
  {0xea, 0x17, 0x00}, \
  {0xeb, 0x50, 0x00}, \
  {0xec, 0x6c, 0x00}, \
  {0xed, 0x9b, 0x00}, \
  {0xee, 0xd8, 0x00}, \
  {0xfe, 0x00, 0x00}, \
  {0x80, 0x13, 0x00}, \
  {0x84, 0x01, 0x00}, \
  {0x89, 0x03, 0x00}, \
  {0x8d, 0x03, 0x00}, \
  {0x8f, 0x14, 0x00}, \
  {0xad, 0x00, 0x00}, \
  {0xc2, 0x7f, 0x00}, \
  {0xc3, 0xff, 0x00}, \
  {0x90, 0x01, 0x00}, \
  {0x92, FULLSTARTY, 0x00}, \
  {0x93, 0x00, 0x00}, \
  {0x94, FULLSTARTX, 0x00}, \
  {0x95, 0x09, 0x00}, \
  {0x96, 0x90, 0x00}, \
  {0x97, 0x0c, 0x00}, \
  {0x98, 0xc0, 0x00}, \
  {0xb0, 0x90, 0x00}, \
  {0xb1, 0x01, 0x00}, \
  {0xb2, 0x00, 0x00}, \
  {0xb6, 0x00, 0x00}, \
  {0xfe, 0x00, 0x00}, \
  {0x40, 0x22, 0x00}, \
  {0x41, 0x20, 0x00}, \
  {0x42, 0x02, 0x00}, \
  {0x43, 0x08, 0x00}, \
  {0x4e, 0x0f, 0x00}, \
  {0x4f, 0xf0, 0x00}, \
  {0x58, 0x80, 0x00}, \
  {0x59, 0x80, 0x00}, \
  {0x5a, 0x80, 0x00}, \
  {0x5b, 0x80, 0x00}, \
  {0x5c, 0x00, 0x00}, \
  {0x5d, 0x00, 0x00}, \
  {0x5e, 0x00, 0x00}, \
  {0x5f, 0x00, 0x00}, \
  {0x6b, 0x01, 0x00}, \
  {0x6c, 0x00, 0x00}, \
  {0x6d, 0x0c, 0x00}, \
  {0xfe, 0x01, 0x00}, \
  {0xbf, 0x40, 0x00}, \
  {0xfe, 0x01, 0x00}, \
  {0x68, 0x77, 0x00}, \
  {0xfe, 0x01, 0x00}, \
  {0x60, 0x00, 0x00}, \
  {0x61, 0x10, 0x00}, \
  {0x62, 0x60, 0x00}, \
  {0x63, 0x30, 0x00}, \
  {0x64, 0x00, 0x00}, \
  {0xfe, 0x01, 0x00}, \
  {0xa8, 0x60, 0x00}, \
  {0xa2, 0xd1, 0x00}, \
  {0xc8, 0x57, 0x00}, \
  {0xa1, 0xb8, 0x00}, \
  {0xa3, 0x91, 0x00}, \
  {0xc0, 0x50, 0x00}, \
  {0xd0, 0x05, 0x00}, \
  {0xd1, 0xb2, 0x00}, \
  {0xd2, 0x1f, 0x00}, \
  {0xd3, 0x00, 0x00}, \
  {0xd4, 0x00, 0x00}, \
  {0xd5, 0x00, 0x00}, \
  {0xd6, 0x00, 0x00}, \
  {0xd7, 0x00, 0x00}, \
  {0xd8, 0x00, 0x00}, \
  {0xd9, 0x00, 0x00}, \
  {0xa4, 0x10, 0x00}, \
  {0xa5, 0x20, 0x00}, \
  {0xa6, 0x60, 0x00}, \
  {0xa7, 0x80, 0x00}, \
  {0xab, 0x18, 0x00}, \
  {0xc7, 0xc0, 0x00}, \
  {0xfe, 0x01, 0x00}, \
  {0xdc, 0x00, 0x00}, \
  {0xdd, 0x00, 0x00}, \
  {0xfe, 0x01, 0x00}, \
  {0x20, 0x02, 0x00}, \
  {0x21, 0x02, 0x00}, \
  {0x23, 0x42, 0x00}, \
  {0xfe, 0x03, 0x00}, \
  {0x02, 0x03, 0x00}, \
  {0x04, 0x80, 0x00}, \
  {0x11, 0x2b, 0x00}, \
  {0x12, 0xf0, 0x00}, \
  {0x13, 0x0f, 0x00}, \
  {0x15, 0x10, 0x00}, \
  {0x16, 0x29, 0x00}, \
  {0x17, 0xff, 0x00}, \
  {0x19, 0xaa, 0x00}, \
  {0x1a, 0x02, 0x00}, \
  {0x21, 0x05, 0x00}, \
  {0x22, 0x06, 0x00}, \
  {0x23, 0x2b, 0x00}, \
  {0x24, 0x00, 0x00}, \
  {0x25, 0x12, 0x00}, \
  {0x26, 0x07, 0x00}, \
  {0x29, 0x07, 0x00}, \
  {0x2a, 0x12, 0x00}, \
  {0x2b, 0x07, 0x00}, \
  {0xfe, 0x00, 0x00}, \
}

#define RES0_REG_ARRAY \
{ \
  {0xf2, 0x00, 0x00}, \
  {0xf4, 0x80, 0x00}, \
  {0xf5, 0x19, 0x00}, \
  {0xf6, 0x44, 0x00}, \
  {0xf8, 0x63, 0x00}, \
  {0xfa, 0x45, 0x00}, \
  {0xf9, 0x00, 0x00}, \
  {0xf7, 0x95, 0x00}, \
  {0xfc, 0x00, 0x00}, \
  {0xfc, 0x00, 0x00}, \
  {0xfc, 0xea, 0x00}, \
  {0xfe, 0x03, 0x00}, \
  {0x03, 0x9a, 0x00}, \
  {0x18, 0x07, 0x00}, \
  {0x01, 0x07, 0x00}, \
  {0xfc, 0xee, 0x00}, \
  {0xfe, 0x00, 0x00}, \
  {0x3f, 0x00, 0x00}, \
  {0x08, 0x20, 0x00}, \
  {0x09, 0x00, 0x00}, \
  {0x0a, 0x3a, 0x00}, \
  {0x0d, 0x09, 0x00}, \
  {0x0e, 0xa0, 0x00}, \
  {0x17, MIRROR, 0x00}, \
  {0xfe, 0x10, 0x00}, \
  {0xfe, 0x00, 0x00}, \
  {0xfe, 0x10, 0x00}, \
  {0xfe, 0x00, 0x00}, \
  {0x80, 0x13, 0x00}, \
  {0xad, 0x00, 0x00}, \
  {0x90, 0x01, 0x00}, \
  {0x92, FULLSTARTY, 0x00}, \
  {0x93, 0x00, 0x00}, \
  {0x94, FULLSTARTX, 0x00}, \
  {0x95, 0x09, 0x00}, \
  {0x96, 0x90, 0x00}, \
  {0x97, 0x0c, 0x00}, \
  {0x98, 0xc0, 0x00}, \
  {0xfe, 0x01, 0x00}, \
  {0xd3, 0x00, 0x00}, \
  {0xd4, 0x00, 0x00}, \
  {0xd7, 0x00, 0x00}, \
  {0xdc, 0x00, 0x00}, \
  {0xdd, 0x00, 0x00}, \
  {0xfe, 0x03, 0x00}, \
  {0x02, 0x03, 0x00}, \
  {0x04, 0x80, 0x00}, \
  {0x11, 0x2b, 0x00}, \
  {0x12, 0xf0, 0x00}, \
  {0x13, 0x0f, 0x00}, \
  {0x15, 0x10, 0x00}, \
  {0x16, 0x29, 0x00}, \
  {0x17, 0xff, 0x00}, \
  {0x19, 0xaa, 0x00}, \
  {0x1a, 0x02, 0x00}, \
  {0x21, 0x05, 0x00}, \
  {0x22, 0x06, 0x00}, \
  {0x23, 0x16, 0x00}, \
  {0x24, 0x00, 0x00}, \
  {0x25, 0x12, 0x00}, \
  {0x26, 0x07, 0x00}, \
  {0x29, 0x07, 0x00}, \
  {0x2a, 0x12, 0x00}, \
  {0x2b, 0x07, 0x00}, \
  {0xfe, 0x00, 0x00}, \
}

#ifndef FULLSIZE_PREVIEW
#define RES1_REG_ARRAY \
{ \
  {0xf2, 0x00, 0x00}, \
  {0xf4, 0x80, 0x00}, \
  {0xf5, 0x19, 0x00}, \
  {0xf6, 0x44, 0x00}, \
  {0xf8, 0x63, 0x00}, \
  {0xfa, 0x45, 0x00}, \
  {0xf9, 0x00, 0x00}, \
  {0xf7, 0x9d, 0x00}, \
  {0xfc, 0x00, 0x00}, \
  {0xfc, 0x00, 0x00}, \
  {0xfc, 0xea, 0x00}, \
  {0xfe, 0x03, 0x00}, \
  {0x03, 0x9a, 0x00}, \
  {0x18, 0x07, 0x00}, \
  {0x01, 0x07, 0x00}, \
  {0xfc, 0xee, 0x00}, \
  {0xfe, 0x00, 0x00}, \
  {0x3f, 0x00, 0x00}, \
  {0x08, 0x20, 0x00}, \
  {0x09, 0x00, 0x00}, \
  {0x0a, 0x3a, 0x00}, \
  {0x0d, 0x09, 0x00}, \
  {0x0e, 0xa0, 0x00}, \
  {0x17, MIRROR, 0x00}, \
  {0xfe, 0x10, 0x00}, \
  {0xfe, 0x00, 0x00}, \
  {0xfe, 0x10, 0x00}, \
  {0xfe, 0x00, 0x00}, \
  {0x80, 0x10, 0x00}, \
  {0xad, 0x30, 0x00}, \
  {0x66, 0x2c, 0x00}, \
  {0xbc, 0x49, 0x00}, \
  {0x90, 0x01, 0x00}, \
  {0x92, BINSTARTY, 0x00}, \
  {0x93, 0x00, 0x00}, \
  {0x94, BINSTARTX, 0x00}, \
  {0x95, 0x04, 0x00}, \
  {0x96, 0xc8, 0x00}, \
  {0x97, 0x06, 0x00}, \
  {0x98, 0x60, 0x00}, \
  {0xfe, 0x01, 0x00}, \
  {0xd3, 0x00, 0x00}, \
  {0xd4, 0x00, 0x00}, \
  {0xd7, 0x00, 0x00}, \
  {0xdc, 0x00, 0x00}, \
  {0xdd, 0x00, 0x00}, \
  {0xfe, 0x03, 0x00}, \
  {0x02, 0x03, 0x00}, \
  {0x04, 0x80, 0x00}, \
  {0x11, 0x2b, 0x00}, \
  {0x12, 0xf8, 0x00}, \
  {0x13, 0x07, 0x00}, \
  {0x15, 0x10, 0x00}, \
  {0x16, 0x29, 0x00}, \
  {0x17, 0xff, 0x00}, \
  {0x19, 0xaa, 0x00}, \
  {0x1a, 0x02, 0x00}, \
  {0x21, 0x02, 0x00}, \
  {0x22, 0x03, 0x00}, \
  {0x23, 0x0a, 0x00}, \
  {0x24, 0x00, 0x00}, \
  {0x25, 0x12, 0x00}, \
  {0x26, 0x04, 0x00}, \
  {0x29, 0x04, 0x00}, \
  {0x2a, 0x02, 0x00}, \
  {0x2b, 0x04, 0x00}, \
  {0xfe, 0x00, 0x00}, \
}
#endif

#define RES2_REG_ARRAY \
{ \
  {0xf2, 0x00, 0x00}, \
  {0xf4, 0x80, 0x00}, \
  {0xf5, 0x19, 0x00}, \
  {0xf6, 0x44, 0x00}, \
  {0xf8, 0x63, 0x00}, \
  {0xfa, 0x45, 0x00}, \
  {0xf9, 0x00, 0x00}, \
  {0xf7, 0x95, 0x00}, \
  {0xfc, 0x00, 0x00}, \
  {0xfc, 0x00, 0x00}, \
  {0xfc, 0xea, 0x00}, \
  {0xfe, 0x03, 0x00}, \
  {0x03, 0x9a, 0x00}, \
  {0x18, 0x07, 0x00}, \
  {0x01, 0x07, 0x00}, \
  {0xfc, 0xee, 0x00}, \
  {0xfe, 0x00, 0x00}, \
  {0x3f, 0x00, 0x00}, \
  {0x08, 0x80, 0x00}, \
  {0x09, 0x02, 0x00}, \
  {0x0a, 0xe6, 0x00}, \
  {0x0d, 0x04, 0x00}, \
  {0x0e, 0x48, 0x00}, \
  {0x17, MIRROR, 0x00}, \
  {0xfe, 0x10, 0x00}, \
  {0xfe, 0x00, 0x00}, \
  {0xfe, 0x10, 0x00}, \
  {0xfe, 0x00, 0x00}, \
  {0x80, 0x13, 0x00}, \
  {0xad, 0x00, 0x00}, \
  {0x90, 0x01, 0x00}, \
  {0x92, FULLSTARTY, 0x00}, \
  {0x93, 0x02, 0x00}, \
  {0x94, 0xa0+FULLSTARTX, 0x00}, \
  {0x95, 0x04, 0x00}, \
  {0x96, 0x38, 0x00}, \
  {0x97, 0x07, 0x00}, \
  {0x98, 0x80, 0x00}, \
  {0xfe, 0x01, 0x00}, \
  {0xd3, 0x4c, 0x00}, \
  {0xd4, 0x10, 0x00}, \
  {0xd7, 0x0c, 0x00}, \
  {0xfe, 0x01, 0x00}, \
  {0xdc, 0x02, 0x00}, \
  {0xdd, 0xac, 0x00}, \
  {0xfe, 0x03, 0x00}, \
  {0x02, 0x03, 0x00}, \
  {0x04, 0x80, 0x00}, \
  {0x11, 0x2b, 0x00}, \
  {0x12, 0x60, 0x00}, \
  {0x13, 0x09, 0x00}, \
  {0x15, 0x10, 0x00}, \
  {0x16, 0x29, 0x00}, \
  {0x17, 0xff, 0x00}, \
  {0x19, 0xaa, 0x00}, \
  {0x1a, 0x02, 0x00}, \
  {0x21, 0x05, 0x00}, \
  {0x22, 0x06, 0x00}, \
  {0x23, 0x2b, 0x00}, \
  {0x24, 0x00, 0x00}, \
  {0x25, 0x12, 0x00}, \
  {0x26, 0x07, 0x00}, \
  {0x29, 0x07, 0x00}, \
  {0x2a, 0x12, 0x00}, \
  {0x2b, 0x07, 0x00}, \
  {0xfe, 0x00, 0x00}, \
}

#define RES3_REG_ARRAY \
{ \
  {0xf2, 0x00, 0x00}, \
  {0xf4, 0x80, 0x00}, \
  {0xf5, 0x19, 0x00}, \
  {0xf6, 0x44, 0x00}, \
  {0xf8, 0x63, 0x00}, \
  {0xfa, 0x45, 0x00}, \
  {0xf9, 0x00, 0x00}, \
  {0xf7, 0x95, 0x00}, \
  {0xfc, 0x00, 0x00}, \
  {0xfc, 0x00, 0x00}, \
  {0xfc, 0xea, 0x00}, \
  {0xfe, 0x03, 0x00}, \
  {0x03, 0x9a, 0x00}, \
  {0x18, 0x07, 0x00}, \
  {0x01, 0x07, 0x00}, \
  {0xfc, 0xee, 0x00}, \
  {0xfe, 0x00, 0x00}, \
  {0x3f, 0x00, 0x00}, \
  {0x08, 0x4c, 0x00}, \
  {0x09, 0x03, 0x00}, \
  {0x0a, 0x9a, 0x00}, \
  {0x0d, 0x02, 0x00}, \
  {0x0e, 0xe0, 0x00}, \
  {0x17, MIRROR, 0x00}, \
  {0xfe, 0x10, 0x00}, \
  {0xfe, 0x00, 0x00}, \
  {0xfe, 0x10, 0x00}, \
  {0xfe, 0x00, 0x00}, \
  {0x80, 0x13, 0x00}, \
  {0xad, 0x00, 0x00}, \
  {0x90, 0x01, 0x00}, \
  {0x92, FULLSTARTY, 0x00}, \
  {0x93, 0x03, 0x00}, \
  {0x94, 0xe0+FULLSTARTX, 0x00}, \
  {0x95, 0x02, 0x00}, \
  {0x96, 0xd0, 0x00}, \
  {0x97, 0x05, 0x00}, \
  {0x98, 0x00, 0x00}, \
  {0xfe, 0x01, 0x00}, \
  {0xd3, 0xa0, 0x00}, \
  {0xd4, 0x00, 0x00}, \
  {0xd7, 0x18, 0x00}, \
  {0xdc, 0x03, 0x00}, \
  {0xdd, 0x60, 0x00}, \
  {0xfe, 0x03, 0x00}, \
  {0x02, 0x03, 0x00}, \
  {0x04, 0x80, 0x00}, \
  {0x11, 0x2b, 0x00}, \
  {0x12, 0x40, 0x00}, \
  {0x1a, 0x02, 0x00}, \
  {0x21, 0x05, 0x00}, \
  {0x22, 0x06, 0x00}, \
  {0x13, 0x06, 0x00}, \
  {0x15, 0x10, 0x00}, \
  {0x16, 0x29, 0x00}, \
  {0x17, 0xff, 0x00}, \
  {0x19, 0xaa, 0x00}, \
  {0x1a, 0x02, 0x00}, \
  {0x21, 0x05, 0x00}, \
  {0x22, 0x06, 0x00}, \
  {0x23, 0x2b, 0x00}, \
  {0x24, 0x00, 0x00}, \
  {0x25, 0x12, 0x00}, \
  {0x26, 0x07, 0x00}, \
  {0x29, 0x07, 0x00}, \
  {0x2a, 0x12, 0x00}, \
  {0x2b, 0x07, 0x00}, \
  {0xfe, 0x00, 0x00}, \
}

/* Sensor Handler */
static sensor_lib_t sensor_lib_ptr =
{
  .sensor_slave_info =
  {
    .sensor_name = SENSOR_MODEL,
    .slave_addr = 0x6e,
    .i2c_freq_mode = SENSOR_I2C_MODE_FAST,
    .addr_type = CAMERA_I2C_BYTE_ADDR,
    .sensor_id_info =
    {
      .sensor_id_reg_addr = 0xf0,
      .sensor_id = 0x8044,
    },
    .power_setting_array =
    {
      .power_setting_a =
      {
        {
          .seq_type = CAMERA_POW_SEQ_GPIO,
          .seq_val = CAMERA_GPIO_STANDBY,
          .config_val = GPIO_OUT_LOW,
          .delay = 1,
        },
        {
          .seq_type = CAMERA_POW_SEQ_GPIO,
          .seq_val = CAMERA_GPIO_RESET,
          .config_val = GPIO_OUT_LOW,
          .delay = 1,
        },
        {
          .seq_type = CAMERA_POW_SEQ_VREG,
          .seq_val = CAMERA_VIO,
          .config_val = 0,
          .delay = 5,
        },
        {
          .seq_type = CAMERA_POW_SEQ_VREG,
          .seq_val = CAMERA_VDIG,
          .config_val = 0,
          .delay = 5,
        },
        {
          .seq_type = CAMERA_POW_SEQ_VREG,
          .seq_val = CAMERA_VANA,
          .config_val = 0,
          .delay = 5,
        },
        {
          .seq_type = CAMERA_POW_SEQ_CLK,
          .seq_val = CAMERA_MCLK,
          .config_val = 24000000,
          .delay = 5,
        },
        {
          .seq_type = CAMERA_POW_SEQ_GPIO,
          .seq_val = CAMERA_GPIO_STANDBY,
          .config_val = GPIO_OUT_HIGH,
          .delay = 1,
        },
        {
          .seq_type = CAMERA_POW_SEQ_GPIO,
          .seq_val = CAMERA_GPIO_RESET,
          .config_val = GPIO_OUT_HIGH,
          .delay = 1,
        },
      },
      .size = 8,
      .power_down_setting_a =
      {
        {
          .seq_type = CAMERA_POW_SEQ_GPIO,
          .seq_val = CAMERA_GPIO_STANDBY,
          .config_val = GPIO_OUT_LOW,
          .delay = 1,
        },
        {
          .seq_type = CAMERA_POW_SEQ_GPIO,
          .seq_val = CAMERA_GPIO_RESET,
          .config_val = GPIO_OUT_LOW,
          .delay = 1,
        },
        {
          .seq_type = CAMERA_POW_SEQ_CLK,
          .seq_val = CAMERA_MCLK,
          .config_val = 0,
          .delay = 5,
        },
        {
          .seq_type = CAMERA_POW_SEQ_GPIO,
          .seq_val = CAMERA_GPIO_VANA,
          .config_val = GPIO_OUT_LOW,
          .delay = 5,
        },
        {
          .seq_type = CAMERA_POW_SEQ_VREG,
          .seq_val = CAMERA_VDIG,
          .config_val = 0,
          .delay = 5,
        },
        {
          .seq_type = CAMERA_POW_SEQ_VREG,
          .seq_val = CAMERA_VIO,
          .config_val = 0,
          .delay = 5,
        },
      },
      .size_down = 6,
    },
  },
  .sensor_output =
  {
    .output_format = SENSOR_BAYER,
    .connection_mode = SENSOR_MIPI_CSI,
    .raw_output = SENSOR_10_BIT_DIRECT,
#if defined(GC8034_MIRROR_NORMAL)
    .filter_arrangement = SENSOR_RGGB,
#elif defined(GC8034_MIRROR_H)
    .filter_arrangement = SENSOR_GRBG,
#elif defined(GC8034_MIRROR_V)
    .filter_arrangement = SENSOR_GBRG,
#elif defined(GC8034_MIRROR_HV)
    .filter_arrangement = SENSOR_BGGR,
#else
    .filter_arrangement = SENSOR_RGGB,
.output_reg_addr =
  {
    .x_output = 0x97,
    .y_output = 0x95,
    .line_length_pclk = 0xff,
    .frame_length_lines = 0xff,
  },
#endif
  },
  .output_reg_addr =
  {
    .x_output = 0x97,
    .y_output = 0x95,
    .line_length_pclk = 0xff,
    .frame_length_lines = 0xff,
  },
  .exp_gain_info =
  {
    .coarse_int_time_addr = 0x03,
    .global_gain_addr = 0xb2,
    .vert_offset = 16,
  },
  .aec_info =
  {
    .min_gain = GC8034MinRealGain,
    .max_gain = GC8034MaxRealGain,
    .max_analog_gain = GC8034MaxRealGain,
    .max_linecount = 10659, //10675-16
  },
  .sensor_num_frame_skip = 2,
  .sensor_num_HDR_frame_skip = 2,
  .sensor_max_pipeline_frame_delay = 2,
  .sensor_property =
  {
    .pix_size = 1.12,
    .sensing_method = SENSOR_SMETHOD_ONE_CHIP_COLOR_AREA_SENSOR,
    .crop_factor = 1.0,
  },
  .pixel_array_size_info =
  {
    .active_array_size =
    {
      .width = 3264,
      .height = 2448,
    },
    .left_dummy = 0,
    .right_dummy = 0,
    .top_dummy = 0,
    .bottom_dummy = 0,
  },
  .color_level_info =
  {
    .white_level = 1023,
    .r_pedestal = 64,
    .gr_pedestal = 64,
    .gb_pedestal = 64,
    .b_pedestal = 64,
  },
  .sensor_stream_info_array =
  {
    .sensor_stream_info =
    {
      {
        .vc_cfg_size = 1,
        .vc_cfg =
        {
          {
            .cid = 0,
            .dt = CSI_RAW10,
            .decode_format = CSI_DECODE_10BIT,
          },
        },
        .pix_data_fmt =
        {
          SENSOR_BAYER,
        },
      },
    },
    .size = 1,
  },
  .start_settings =
  {
    .reg_setting_a = START_REG_ARRAY,
    .addr_type = CAMERA_I2C_BYTE_ADDR,
    .data_type = CAMERA_I2C_BYTE_DATA,
    .delay = 0,
  },
  .stop_settings =
  {
    .reg_setting_a = STOP_REG_ARRAY,
    .addr_type = CAMERA_I2C_BYTE_ADDR,
    .data_type = CAMERA_I2C_BYTE_DATA,
    .delay = 0,
  },
  .groupon_settings =
  {
    .reg_setting_a = GROUPON_REG_ARRAY,
    .addr_type = CAMERA_I2C_BYTE_ADDR,
    .data_type = CAMERA_I2C_BYTE_DATA,
    .delay = 0,
  },
  .groupoff_settings =
  {
    .reg_setting_a = GROUPOFF_REG_ARRAY,
    .addr_type = CAMERA_I2C_BYTE_ADDR,
    .data_type = CAMERA_I2C_BYTE_DATA,
    .delay = 0,
  },
  .embedded_data_enable_settings =
  {
    .reg_setting_a = {},
    .addr_type = 0,
    .data_type = 0,
    .delay = 0,
  },
  .embedded_data_disable_settings =
  {
    .reg_setting_a = {},
    .addr_type = 0,
    .data_type = 0,
    .delay = 0,
  },
  .test_pattern_info =
  {
    .test_pattern_settings =
    {
      {
        .mode = SENSOR_TEST_PATTERN_OFF,
        .settings =
        {
          .reg_setting_a =
          {
            {0xfc, 0x00, 0x00},
            {0xf7, 0x95, 0x00},
            {0xfc, 0x00, 0x00},
            {0xfc, 0xee, 0x00},
            {0xfe, 0x03, 0x00},
            {0x21, 0x05, 0x00},
            {0x22, 0x06, 0x00},
            {0x23, 0x2b, 0x00},
            {0x26, 0x07, 0x00},
            {0x29, 0x07, 0x00},
            {0x2a, 0x12, 0x00},
            {0x2b, 0x07, 0x00},
            {0xfe, 0x00, 0x00},
            {0x8c, 0x00, 0x00},
          },
          .addr_type = CAMERA_I2C_BYTE_ADDR,
          .data_type = CAMERA_I2C_BYTE_DATA,
          .delay = 0,
        }
      },
      {
        .mode = SENSOR_TEST_PATTERN_SOLID_COLOR,
        .settings =
        {
          .reg_setting_a =
          {
            {0xfc, 0x00, 0x00},
            {0xf7, 0x9d, 0x00},
            {0xfc, 0x00, 0x00},
            {0xfc, 0xfe, 0x00},
            {0xfe, 0x03, 0x00},
            {0x21, 0x02, 0x00},
            {0x22, 0x03, 0x00},
            {0x23, 0x0a, 0x00},
            {0x26, 0x04, 0x00},
            {0x29, 0x04, 0x00},
            {0x2a, 0x02, 0x00},
            {0x2b, 0x04, 0x00},
            {0xfe, 0x00, 0x00},
            {0x8c, 0x01, 0x00},
          },
          .addr_type = CAMERA_I2C_BYTE_ADDR,
          .data_type = CAMERA_I2C_BYTE_DATA,
          .delay = 0,
        },
      },
    },
    .size = 2,
    .solid_mode_addr =
    {
      .r_addr = 0,
      .gr_addr = 0,
      .gb_addr = 0,
      .b_addr = 0,
    },
  },
  .init_settings_array =
  {
    .reg_settings =
    {
      {
        .reg_setting_a = INIT0_REG_ARRAY,
        .addr_type = CAMERA_I2C_BYTE_ADDR,
        .data_type = CAMERA_I2C_BYTE_DATA,
        .delay = 0,
      },
    },
    .size = 1,
  },
  .res_settings_array =
  {
    .reg_settings =
    {
      /* Res 0 */
      {
        .reg_setting_a = RES0_REG_ARRAY,
        .addr_type = CAMERA_I2C_BYTE_ADDR,
        .data_type = CAMERA_I2C_BYTE_DATA,
        .delay = 0,
      },
#ifndef FULLSIZE_PREVIEW
      /* Res 1 */
      {
        .reg_setting_a = RES1_REG_ARRAY,
        .addr_type = CAMERA_I2C_BYTE_ADDR,
        .data_type = CAMERA_I2C_BYTE_DATA,
        .delay = 0,
.output_reg_addr =
  {
    .x_output = 0x97,
    .y_output = 0x95,
    .line_length_pclk = 0xff,
    .frame_length_lines = 0xff,
  },
      },
#endif
      /* Res 2 */
      {
        .reg_setting_a = RES2_REG_ARRAY,
        .addr_type = CAMERA_I2C_BYTE_ADDR,
        .data_type = CAMERA_I2C_BYTE_DATA,
        .delay = 0,
      },
      /* Res 3 */
      {
        .reg_setting_a = RES3_REG_ARRAY,
        .addr_type = CAMERA_I2C_BYTE_ADDR,
        .data_type = CAMERA_I2C_BYTE_DATA,
        .delay = 0,
      },
    },
 #ifndef FULLSIZE_PREVIEW
    .size = 4,
 #else
    .size = 3,
 #endif
  },
  .out_info_array =
  {
    .out_info =
    {
      /* Res 0 */
      {
        .x_output = 3264,
        .y_output = 2448,
        .line_length_pclk = 4272,
        .frame_length_lines = 2496,//1258//pclk/frame_length/maxframerate
        .vt_pixel_clk = 320000000,
        .op_pixel_clk = 268800000,
        .binning_factor = 1,
        .min_fps = 8.0,
        .max_fps = 30.0,
        .mode = SENSOR_DEFAULT_MODE,
        .offset_x = 0,
        .offset_y = 0,
        .scale_factor = 1,
      },
#ifndef FULLSIZE_PREVIEW
      /* Res 1 */
      {
        .x_output = 1632,
        .y_output = 1224,
        .line_length_pclk = 4272,
        .frame_length_lines = 2496,//1258
        .vt_pixel_clk = 320000000,
        .op_pixel_clk = 134400000,
        .binning_factor = 2,
        .min_fps = 8.0,
        .max_fps = 30.0,
        .mode = SENSOR_DEFAULT_MODE,
        .offset_x = 0,
        .offset_y = 0,
        .scale_factor = 1,
      },
#endif
      /* Res 2*/
      {
        .x_output = 1920,
        .y_output = 1080,
        .line_length_pclk = 4272,
        .frame_length_lines = 1248,//622
        .vt_pixel_clk = 320000000,
        .op_pixel_clk = 268800000,
        .binning_factor = 1,
        .min_fps = 8.0,
        .max_fps = 60.0,
        .mode = SENSOR_HFR_MODE,
        .offset_x = 672,
        .offset_y = 684,
        .scale_factor = 1,
      },
      /* Res 3*/
      {
        .x_output = 1280,
        .y_output = 720,
        .line_length_pclk = 4272,
        .frame_length_lines = 832,
        .vt_pixel_clk = 320000000,
        .op_pixel_clk = 268800000,
        .binning_factor = 2,
        .min_fps = 8.0,
        .max_fps = 90.0,
        .mode = SENSOR_HFR_MODE,
        .offset_x = 176,
        .offset_y = 252,
        .scale_factor = 1,
      },
    },
#ifndef FULLSIZE_PREVIEW
    .size = 4,
#else
    .size = 3,
#endif
  },
  .csi_params =
  {
    .lane_cnt = 4,
    .settle_cnt = 0x14,
    .is_csi_3phase = 0,
  },
  .csid_lut_params_array =
  {
    .lut_params =
    {
      /* Res 0 */
      {
        .num_cid = 1,
        .vc_cfg_a =
        {
          {
            .cid = 0,
            .dt = CSI_RAW10,
            .decode_format = CSI_DECODE_10BIT
          },
        },
      },
#ifndef FULLSIZE_PREVIEW
      /* Res 1 */
      {
        .num_cid = 1,
        .vc_cfg_a =
        {
          {
            .cid = 0,
            .dt = CSI_RAW10,
            .decode_format = CSI_DECODE_10BIT
          },
        },
      },
#endif
      /* Res 2 */
      {
        .num_cid = 1,
        .vc_cfg_a =
        {
          {
            .cid = 0,
            .dt = CSI_RAW10,
            .decode_format = CSI_DECODE_10BIT
          },
        },
      },
      /* Res 3 */
      {
        .num_cid = 1,
        .vc_cfg_a =
        {
          {
            .cid = 0,
            .dt = CSI_RAW10,
            .decode_format = CSI_DECODE_10BIT
          },
        },
      },
    },
#ifndef FULLSIZE_PREVIEW
   .size = 4,
#else
   .size = 3,
#endif   

  },
  .crop_params_array =
  {
    .crop_params =
    {
      /* Res 0 */
      {
        .top_crop = 0,
        .bottom_crop = 0,
        .left_crop = 0,
        .right_crop = 0,
      },
#ifndef FULLSIZE_PREVIEW
      /* Res 1 */
      {
        .top_crop = 0,
        .bottom_crop = 0,
        .left_crop = 0,
        .right_crop = 0,
      },
#endif      
      /* Res 2 */
      {
        .top_crop = 0,
        .bottom_crop = 0,
        .left_crop = 0,
        .right_crop = 0,
      },
      /* Res 3 */
      {
        .top_crop = 0,
        .bottom_crop = 0,
        .left_crop = 0,
        .right_crop = 0,
      },
    },
#ifndef FULLSIZE_PREVIEW
    .size = 4,
#else
    .size = 3,
#endif 
  },
  .exposure_func_table =
  {
    .sensor_calculate_exposure = sensor_calculate_exposure,
    .sensor_fill_exposure_array = sensor_fill_exposure_array,
  },
  .meta_data_out_info_array =
  {
    .meta_data_out_info =
    {
      {
        .width = 0,
        .height = 0,
        .stats_type = 0,
      },
    },
    .size = 0,
  },
  .rolloff_config =
  {
    .enable = FALSE,
    .full_size_info =
    {
      .full_size_width = 0,
      .full_size_height = 0,
      .full_size_left_crop = 0,
      .full_size_top_crop = 0,
    },
  },
  .adc_readout_time = 0,
  .app_delay = {
    [SENSOR_DELAY_EXPOSURE] = 0,
    [SENSOR_DELAY_ANALOG_SENSOR_GAIN] = 0,
    [SENSOR_DELAY_DIGITAL_SENSOR_GAIN] = 0,
  },
  .noise_coeff = {
    .gradient_S = 3.738032e-06,
    .offset_S = 3.651935e-04,
    .gradient_O = 4.499952e-07,
    .offset_O = -2.968624e-04,
  },
};

#endif /* __gc8034_LIB_H__ */
